{block content}
	<b-container>
		<b-row align-h="center">
			<b-col class="pt-5" cols="5">
				<b-card title="Přihlásit se">
					<b-alert
							:show="dismissCountDown"
							dismissible
							variant="danger"
							@dismissed="dismissCountDown=0"
							@dismiss-count-down="countDownChanged"
					>
						{{ signMessage }}
						<b-progress
								variant="danger"
								:max="5"
								:value="dismissCountDown"
								height="4px"
								class="mt-3"
						></b-progress>
					</b-alert>
					{include form}
					<div v-if="isBusy" class="text-center text-danger my-2">
						<b-spinner class="align-middle"></b-spinner>
						<strong>Loading...</strong>
					</div>
				</b-card>
			</b-col>
		</b-row>
	</b-container>
{/block}

{define form}
	<b-form @submit="onSubmit">
		<b-form-group label="Uživatel:" label-for="username">
			<b-form-input
					id="username"
					v-model="form.username"
					type="text"
					required
			></b-form-input>
		</b-form-group>

		<b-form-group label="Heslo:" label-for="password">
			<b-form-input
					id="password"
					v-model="form.password"
					type="password"
					required
			></b-form-input>
		</b-form-group>

		<b-form-group label-for="remember">
			<b-form-checkbox
					id="remember"
					v-model="form.remember"
					value="yes"
					unchecked-value="no"
			>
				Trvalé přihlášení
			</b-form-checkbox>
		</b-form-group>

		<b-button type="submit" variant="primary">Přihlásit se</b-button>
	</b-form>
{/define}

{block scripts}
	<script>
		new Vue({
			el: '#app',
			data() {
				return {
					form: {
						username: '',
						password: '',
						remember: 'no'
					},
					isBusy: false,
					dismissCountDown: 0,
					signMessage: ''
				}
			},
			methods: {
				onSubmit(evt) {
					evt.preventDefault();
					this.isBusy = true;
					post({link CmsApi:default, package => 'cms'}, this.form, this, function (app, response) {
						app.isBusy = false;

						if ('message' in response) {
							app.dismissCountDown = 5;
							app.signMessage = response.message;
						}
					});
				},
				countDownChanged(dismissCountDown) {
					this.dismissCountDown = dismissCountDown
				}
			}
		})
	</script>
{/block}