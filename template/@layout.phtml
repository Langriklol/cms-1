<?php

declare(strict_types=1);

namespace Baraja\Cms;


use Baraja\Cms\Proxy\GlobalAsset\CmsAsset;

/**
 * @var string $basePath
 * @var CmsAsset[] $staticAssets
 * @var mixed[] $globalSettings
 * @var string $content
 * @var mixed[] $menu
 * @var bool $isDebug
 */

?>
<!DOCTYPE html>
<html lang="cs">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<meta name="description" content="Baraja administration">
	<meta name="author" content="Baraja.cz">
	<meta name="robots" content="noindex, nofollow, noarchive">
	<title>Admin</title>
	<link type="text/css" rel="stylesheet" href="https://unpkg.com/bootstrap@4.6.0/dist/css/bootstrap.min.css">
	<link type="text/css" rel="stylesheet" href="https://unpkg.com/bootstrap-vue@2.21.2/dist/bootstrap-vue.min.css">
	<link type="text/css" rel="stylesheet" href="<?= Helpers::escapeHtmlAttr($basePath . '/admin/assets/core.css') ?>">
	<link rel="shortcut icon" type="image/x-icon" href="<?= Helpers::escapeHtmlAttr($basePath . '/admin/assets/favicon.ico') ?>">
	<?php
	foreach ($staticAssets as $staticAsset) {
		if ($staticAsset->getFormat() === 'css') {
			echo '<link type="text/css" rel="stylesheet" href="'
                . Helpers::escapeHtmlAttr($staticAsset->getUrl())
                .'">' . "\n";
		}
	}
	?>
	<script>
        let basePath = <?=json_encode($basePath)?>;
        let baseApiPath = <?=json_encode($basePath . '/api/v1')?>;
        let cmsGlobalSettings = <?=json_encode($globalSettings)?>
	</script>
</head>

<body id="app-cms">
<div id="app">
	<b-container fluid>
		<b-row>
			<b-col cols="2" id="cms-menu" role="navigation" class="px-0">
				<cms-menu
					:structure="<?= Helpers::escapeHtmlAttr(json_encode($menu['structure'])) ?>"
					dashboard-link="<?= Helpers::escapeHtmlAttr($menu['dashboardLink']) ?>"
					:is-dashboard="<?= $menu['isDashboard'] ? 'true' : 'false' ?>"
					active-key="<?= $menu['activeKey'] ?? null ?>"
					:debug-mode="<?= $isDebug ? 'true' : 'false' ?>">
				</cms-menu>
			</b-col>
			<b-col cols="10" role="main" class="cms-main px-0">
			<?= $content ?>
			</b-col>
		</b-row>
	</b-container>
	<support-chat></support-chat>
	<cms-footer year="<?=date('Y')?>"></cms-footer>
</div>
<script src="<?= $isDebug ? 'https://unpkg.com/vue@2.6.11/dist/vue.js' : 'https://unpkg.com/vue@2.6.11/dist/vue.min.js' ?>"></script>
<script src="https://unpkg.com/bootstrap-vue@2.17.0/dist/bootstrap-vue.min.js"></script>
<script src="https://unpkg.com/bootstrap-vue@2.21.2/dist/bootstrap-vue-icons.min.js"></script>
<script src="https://unpkg.com/axios@0.21.1/dist/axios.min.js"></script>
<?php
foreach ($staticAssets as $staticAsset) {
	if ($staticAsset->getFormat() === 'js') {
		echo '<script src="' . Helpers::escapeHtmlAttr($staticAsset->getUrl()) . '"></script>' . "\n";
	}
}
?>
<script>
	let axiosApi = axios.create({
		baseURL: <?=json_encode($basePath . '/api/v1')?>
	});
    axiosApi.interceptors.response.use((ok) => {
        let data = ok.data;
        if ('flashMessages' in data) {
            data.flashMessages.forEach(flashItem => {
                app.$bvToast.toast(flashItem.message, {
                    variant: flashItem.type,
                    title: 'Notification',
                    toaster: 'b-toaster-bottom-left'
                })
            })
        }
        return Promise.resolve(ok);
    }, (error) => {
        let data = error.response.data;
        if ('flashMessages' in data) {
            data.flashMessages.forEach(flashItem => {
                app.$bvToast.toast(flashItem.message, {
                    variant: flashItem.type,
                    title: 'Warning',
                    toaster: 'b-toaster-bottom-left'
                })
            })
        }
        if ('message' in data) {
            app.$bvToast.toast(data.message, {
                variant: 'danger',
                title: 'Error',
                toaster: 'b-toaster-bottom-left'
            })
        }
        return Promise.reject(error);
    });
	let eventBus = new Vue();
	let app = new Vue({el: '#app'});
</script>
</body>
</html>
